{
  "name": "grunt-file-regex-rename-mod",
  "description": "Rename files matching regular expression",
  "version": "0.1.0",
  "homepage": "https://github.com/kashiif/grunt-file-regex-rename",
  "author": {
    "name": "Kashif Iqbal Khan",
    "url": "http://www.kashiif.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kashiif/grunt-file-regex-rename.git"
  },
  "bugs": {
    "url": "https://github.com/kashiif/grunt-file-regex-rename/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kashiif/grunt-file-regex-rename/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "contributors": [],
  "readmeFilename": "README.md",
  "readme": "# grunt-file-regex-rename\n\nReplaces strings on files by using string or regex patterns. Attempts to be a [String.prototype.replace](http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11) adapter task for your grunt project.\n\n## Getting Started\nTo install this grunt plugin on your project simply do: `npm install grunt-file-regex-rename`\n\nThen add this line to your project's `Gruntfile.js`:\n\n```javascript\ngrunt.loadNpmTasks('grunt-file-regex-rename');\n```\n\n[grunt]: http://gruntjs.com/\n\n## Documentation\n\n### Configuration\n\nInside your `Gruntfile.js` file add a section named `fileregexrename`. This section specifies the files to rename, destinations, patterns and replacements.\n\n#### Parameters\n\n##### files ```object```\n\nThis defines what files this task will edit and must follow [Gruntfile Files mapping](https://github.com/gruntjs/grunt/wiki/Configuring-tasks).\n\n##### options ```object```\n\nThis controls how this task operates and should contain key:value pairs, see options below.\n\n#### Options\n\n##### replacements ```array```\n\nThis option will hold all your pattern/replacement pairs. A pattern/replacement pair should contain key:value pairs containing:\n\n* pattern ```string``` or ```regex```\n* replacement ```string```\n\n``` javascript\noptions: {\n  replacements: [{\n    pattern: /\\/(asdf|qwer)\\//ig,\n    replacement: \"'$1'\"\n  }, {\n    pattern: \",\",\n    replacement: \";\"\n  }]\n}\n```\n\n###### Note\n\nIf the pattern is a string, only the first occurrence will be replaced, as stated on [String.prototype.replace](http://www.ecma-international.org/ecma-262/5.1/#sec-15.5.4.11).\n\n#### Config Example\n\n``` javascript\nfileregexrename: {\n  dist: {\n    files: {\n      \"path/to/directory/\": \"path/to/source/*\", // includes files in dir\n      \"path/to/directory/\": \"path/to/source/**\", // includes files in dir and subdirs\n      \"path/to/project-<%= pkg.version %>/\": \"path/to/source/**\", // variables in destination\n      \"path/to/directory/\": [\"path/to/sources/*.js\", \"path/to/more/*.js\"], // include JS files in two diff dirs\n      \"path/to/filename.ext\": \"path/to/source.ext\"\n    },\n    options: {\n      replacements: [{\n        pattern: /\\/(asdf|qwer)\\//ig,\n        replacement: \"'$1'\"\n      }, {\n        pattern: \",\",\n        replacement: \";\"\n      }]\n    }\n  },\n  inline: {\n    options: {\n      replacements: [\n        // place files inline example\n      \t{\n        \tpattern: '<script src=\"js/async.min.js\"></script>',\n        \treplacement: '<script><%= grunt.file.read(\"path/to/source/js/async.min.js\") %></script>'\n      \t}\n      ]\n    },\n    files: {...}\n  }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n0.1.0\n  - Initial release.\n\n## License\nCopyright (c) 2012 Kashif Iqbal Khan.\nLicensed under the MIT license.",
  "_id": "grunt-file-regex-rename@0.1.0",
  "_from": "grunt-file-regex-rename@"
}
